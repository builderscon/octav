package model

// Automatically generated by genmodel utility. DO NOT EDIT!

import (
	"database/sql"
	"encoding/json"
	"time"

	"github.com/builderscon/octav/octav/db"
	"github.com/lestrrat/go-pdebug"
)

var _ = pdebug.Enabled
var _ = time.Time{}
var _ = sql.ErrNoRows

type rawRoom struct {
	ID       string `json:"id"`
	VenueID  string `json:"venue_id"`
	Name     string `json:"name" l10n:"true"`
	Capacity uint   `json:"capacity"`
}

func (v Room) MarshalJSON() ([]byte, error) {
	var raw rawRoom
	raw.ID = v.ID
	raw.VenueID = v.VenueID
	raw.Name = v.Name
	raw.Capacity = v.Capacity
	buf, err := json.Marshal(raw)
	if err != nil {
		return nil, err
	}
	return MarshalJSONWithL10N(buf, v.LocalizedFields)
}

func (v *Room) Load(tx *sql.Tx, id string) (err error) {
	if pdebug.Enabled {
		g := pdebug.Marker("model.Room.Load %s", id).BindError(&err)
		defer g.End()
	}
	vdb := db.Room{}
	if err := vdb.LoadByEID(tx, id); err != nil {
		return err
	}

	if err := v.FromRow(&vdb); err != nil {
		return err
	}
	return nil
}

func (v *Room) FromRow(vdb *db.Room) error {
	v.ID = vdb.EID
	v.VenueID = vdb.VenueID
	v.Name = vdb.Name
	v.Capacity = vdb.Capacity
	return nil
}

func (v *Room) ToRow(vdb *db.Room) error {
	vdb.EID = v.ID
	vdb.VenueID = v.VenueID
	vdb.Name = v.Name
	vdb.Capacity = v.Capacity
	return nil
}
